from aiogram import Bot
from aiogram.types import Message
from aiogram_dialog import Dialog, DialogManager, StartMode, Window
from aiogram_dialog.api.entities import ShowMode
from aiogram_dialog.widgets.kbd import Button, Group, SwitchTo
from aiogram_dialog.widgets.text import Const

from core.states import (
    CategoryFormStates,
    CategoryStates,
    MainMenuStates,
    TaskFormStates,
    TaskStates,
)
from services.client_api import APIClient

# from states import MainMenuStates, AddCategoryStates, TaskStates, AddTaskStates
# from api_client import APIClient

api_client = APIClient()

main_menu_window = Window(
    Const("üìã –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é ToDo Bot\n\n–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:"),
    Group(
        Button(
            Const("üìù –ú–æ–∏ –∑–∞–¥–∞—á–∏"),
            id="my_tasks",
            on_click=lambda c, b, d: d.start(
                TaskStates.list, mode=StartMode.RESET_STACK
            ),
        ),
        Button(
            Const("üè∑Ô∏è –ú–æ–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏"),
            id="my_categories",
            on_click=lambda c, b, d: d.start(CategoryStates.list),
        ),
        Button(
            Const("‚ûï –î–æ–±–∞–≤–∏—Ç—å –∑–∞–¥–∞—á—É"),
            id="add_task",
            on_click=lambda c, b, d: d.start(
                TaskFormStates.title, mode=StartMode.RESET_STACK
            ),
        ),
        Button(
            Const("üè∑Ô∏è –°–æ–∑–¥–∞—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏—é"),
            id="add_category",
            on_click=lambda c, b, d: d.start(
                CategoryFormStates.input_name, mode=StartMode.RESET_STACK
            ),
        ),
        Button(
            Const("‚ÑπÔ∏è –û –±–æ—Ç–µ"),
            id="about",
            on_click=lambda c, b, d: d.switch_to(MainMenuStates.about),
        ),
        width=1,
    ),
    state=MainMenuStates.main,
)

about_window = Window(
    Const(
        "ü§ñ ToDo Bot\n\n"
        "–≠—Ç–æ—Ç –±–æ—Ç –ø–æ–º–æ–∂–µ—Ç –≤–∞–º —É–ø—Ä–∞–≤–ª—è—Ç—å –≤–∞—à–∏–º–∏ –∑–∞–¥–∞—á–∞–º–∏.\n\n"
        "–í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏:\n"
        "‚Ä¢ üìù –ü—Ä–æ—Å–º–æ—Ç—Ä –∑–∞–¥–∞—á\n"
        "‚Ä¢ ‚úÖ –û—Ç–º–µ—Ç–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è\n"
        "‚Ä¢ üè∑Ô∏è –ö–∞—Ç–µ–≥–æ—Ä–∏–∏ –∑–∞–¥–∞—á\n"
        "‚Ä¢ ‚è∞ –ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è\n\n"
        "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –Ω–∏–∂–µ –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏."
    ),
    SwitchTo(Const("‚¨ÖÔ∏è –ù–∞–∑–∞–¥"), id="back_to_main", state=MainMenuStates.main),
    state=MainMenuStates.about,
)

main_menu_dialog = Dialog(main_menu_window, about_window)


async def on_startup(bot: Bot):
    print("Bot started!")


async def start_command(message: Message, dialog_manager: DialogManager) -> None:
    user = message.from_user

    success = await api_client.register_telegram_user(
        telegram_id=user.id,
        username=user.username,
        first_name=user.first_name,
        last_name=user.last_name,
    )

    if success:
        await message.answer("üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! –í–∞—à –∞–∫–∫–∞—É–Ω—Ç —É—Å–ø–µ—à–Ω–æ –ø–æ–¥–∫–ª—é—á–µ–Ω.")
        await dialog_manager.start(
            MainMenuStates.main, mode=StartMode.RESET_STACK, show_mode=ShowMode.EDIT
        )
    else:
        # –ï—Å–ª–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –Ω–µ —É–¥–∞–ª–∞—Å—å, –≤—Å–µ —Ä–∞–≤–Ω–æ –∑–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞, –Ω–æ —Å –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ–º
        await message.answer(
            "‚ö†Ô∏è –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–∏ –∫ —Å–∏—Å—Ç–µ–º–µ. "
            "–ù–µ–∫–æ—Ç–æ—Ä—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –º–æ–≥—É—Ç –±—ã—Ç—å –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ."
        )
        await dialog_manager.start(
            MainMenuStates.main, mode=StartMode.RESET_STACK, show_mode=ShowMode.EDIT
        )
