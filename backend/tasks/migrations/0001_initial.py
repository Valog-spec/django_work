# Generated by Django 5.2.6 on 2025-10-08 12:37

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Category",
            fields=[
                (
                    "id",
                    models.CharField(
                        editable=False, max_length=30, primary_key=True, serialize=False
                    ),
                ),
                (
                    "name",
                    models.CharField(max_length=100, verbose_name="Название категории"),
                ),
                (
                    "telegram_user_id",
                    models.BigIntegerField(
                        blank=True,
                        db_index=True,
                        null=True,
                        verbose_name="Telegram пользователь",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Дата создания"
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="categories",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Пользователь",
                    ),
                ),
            ],
            options={
                "verbose_name": "Категория",
            },
        ),
        migrations.CreateModel(
            name="Task",
            fields=[
                (
                    "id",
                    models.CharField(
                        editable=False, max_length=30, primary_key=True, serialize=False
                    ),
                ),
                (
                    "title",
                    models.CharField(max_length=200, verbose_name="Заголовок задачи"),
                ),
                (
                    "description",
                    models.TextField(
                        blank=True, null=True, verbose_name="Описание задачи"
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Дата создания"
                    ),
                ),
                (
                    "due_date",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Срок выполнения"
                    ),
                ),
                (
                    "is_completed",
                    models.BooleanField(default=False, verbose_name="Выполнена"),
                ),
                (
                    "notification_sent",
                    models.BooleanField(
                        default=False, verbose_name="Уведомление отправлено"
                    ),
                ),
                ("telegram_user_id", models.BigIntegerField(blank=True, null=True)),
                (
                    "categories",
                    models.ManyToManyField(
                        blank=True,
                        related_name="tasks",
                        to="tasks.category",
                        verbose_name="Категории",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="tasks",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Пользователь",
                    ),
                ),
            ],
            options={
                "verbose_name": "Задача",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="BotProfile",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("telegram_user_id", models.BigIntegerField(unique=True)),
                ("chat_id", models.BigIntegerField(unique=True)),
                ("first_name", models.CharField(blank=True, max_length=255, null=True)),
                ("last_name", models.CharField(blank=True, max_length=255, null=True)),
                ("username", models.CharField(blank=True, max_length=255, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("last_activity", models.DateTimeField(auto_now=True)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="bot_profiles",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "indexes": [
                    models.Index(
                        fields=["telegram_user_id"],
                        name="tasks_botpr_telegra_2f7d27_idx",
                    ),
                    models.Index(
                        fields=["chat_id"], name="tasks_botpr_chat_id_15fab3_idx"
                    ),
                ],
            },
        ),
        migrations.AddIndex(
            model_name="category",
            index=models.Index(fields=["user"], name="tasks_categ_user_id_209ab2_idx"),
        ),
        migrations.AddIndex(
            model_name="category",
            index=models.Index(
                fields=["telegram_user_id"], name="tasks_categ_telegra_e5bfac_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="category",
            index=models.Index(
                fields=["created_at"], name="tasks_categ_created_4c553a_idx"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="category",
            unique_together={("name", "user")},
        ),
        migrations.AddIndex(
            model_name="task",
            index=models.Index(
                fields=["telegram_user_id"], name="tasks_task_telegra_151b35_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="task",
            index=models.Index(
                fields=["is_completed"], name="tasks_task_is_comp_30fbc3_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="task",
            index=models.Index(
                fields=["due_date"], name="tasks_task_due_dat_bce847_idx"
            ),
        ),
    ]
